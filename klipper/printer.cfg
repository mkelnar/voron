### INFO
## pinout: https://teamgloomy.github.io/btt_octopus_1.1_f429_pins.html
## reference: https://www.klipper3d.org/Config_Reference.html#extruder
## checks: https://www.klipper3d.org/Config_checks.html

[include stealthburner_leds.cfg]
[include chamber_light.cfg]
[include klicky/klicky-probe.cfg]

#####################################################################
#   General Settings
#####################################################################
[mcu]
###Change to device found by "ls -l /dev/serial/by-id/" with just one this MCU connected to Pi
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_22002B001050535556323420-if00
restart_method: command

[mcu SBCAN]
canbus_uuid: 83ee0efa782d

[printer]
kinematics: corexy
max_velocity: 350
max_accel: 5800
max_z_velocity: 12
max_z_accel: 350
square_corner_velocity: 5.0

[virtual_sdcard]
path: ~/printer_data/gcodes

[pause_resume]
recover_velocity: 50

[display_status]

[firmware_retraction]
retract_length: 0.8
retract_speed: 65
unretract_speed: 55
unretract_extra_length: 0

## fine arcs, resolution is experimental but started with that (lower than 0.2-0.3 can cause mcu shutdown)
## needs to be enabled to support orca slicer "spiral Z hop"
[gcode_arcs]
resolution: 0.3

## allow object exclusion if proper blocks are generated in gcode
[exclude_object]

[idle_timeout]
timeout: 3600

#####################################################################
#   RESONANCE
#####################################################################
[adxl345]
cs_pin: SBCAN: PB12
spi_software_sclk_pin: SBCAN: PB10
spi_software_mosi_pin: SBCAN: PB11
spi_software_miso_pin: SBCAN: PB2
axes_map: z,-y,x

[resonance_tester]
probe_points: 100, 100, 20
accel_chip: adxl345

[input_shaper]
## repeat calibration https://www.klipper3d.org/Measuring_Resonances.html
## whenever something mechanical is changed (box, extruder, extruder wiring, gantry, ...)
## update printer max acceleration accordingly
shaper_freq_x: 68.8
shaper_type_x: mzv
shaper_freq_y: 56
shaper_type_y: ei

#####################################################################
#   X/Y Stepper Settings
#####################################################################
##  B Stepper - Left
##  Connected to MOTOR_1
[stepper_x]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200
endstop_pin: PG6
position_min: 5
position_endstop: 250
position_max: 250
homing_speed: 50
second_homing_speed: 10
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PD11
interpolate: False
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to MOTOR_0
[stepper_y]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200
endstop_pin: PG9
position_min: 0
position_endstop: 250
position_max: 250
homing_speed: 50
second_homing_speed: 10
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PC4
interpolate: False
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#   Z Stepper Settings
#####################################################################

##  Z0 Stepper - Front Left
##  Connected to MOTOR_6
[stepper_z]
step_pin: PE2
dir_pin: PE3
enable_pin: !PD4
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 4
microsteps: 32
endstop_pin: PG10
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
position_endstop: 3.065
## All builds use same Max Z
position_max: 220
position_min: -2.5
homing_speed: 8.0 # Leadscrews are slower than 2.4, 10 is a recommended max.
second_homing_speed: 3
homing_retract_dist: 3

[tmc2209 stepper_z]
uart_pin: PE1
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z1 Stepper - Rear Center
##  Connected to MOTOR_7
[stepper_z1]
step_pin: PE6
dir_pin: PA14
enable_pin: !PE0
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 4
microsteps: 32

[tmc2209 stepper_z1]
uart_pin: PD3
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z2 Stepper - Front Right
##  Connected to MOTOR_5
[stepper_z2]
step_pin: PC13
dir_pin: PF0
enable_pin: !PF1
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 4
microsteps: 32

[tmc2209 stepper_z2]
uart_pin: PE4
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#   Extruder
#####################################################################

[extruder]
step_pin: SBCAN: PD0
dir_pin: SBCAN: PD1
enable_pin: !SBCAN: PD2
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 22.11419442
gear_ratio: 50:10
microsteps: 32
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
pressure_advance: 0.04334
pressure_advance_smooth_time: 0.040

## HOTEND
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: SBCAN: PB13
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
sensor_type: Generic 3950
sensor_pin: SBCAN: PA3
min_temp: 10
max_temp: 270
max_power: 1.0
min_extrude_temp: 170

control = pid
pid_kp = 21.871
pid_ki = 1.020
pid_kd = 117.283

##  E0 on MOTOR3
[tmc2209 extruder]
uart_pin: SBCAN: PA15
interpolate: false
run_current: 0.65
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#   Bed Heater
#####################################################################

[thermistor Trianglelab-NTC100K-B3950]
temperature1: 25
resistance1: 103180
temperature2: 150
resistance2: 1366.2
temperature3: 250
resistance3: 168.6

[heater_bed]
heater_pin: PA3
sensor_type: Trianglelab-NTC100K-B3950
sensor_pin: PF3
##  The formula is "SSR_Current / (Wattage_of_bed_heater / Mains_voltage) = max_power"
##  If max_power is greater than 1.0, use 1.0
## G3NB-210B-1 (10A)
max_power: 1.0
min_temp: 0
max_temp: 125

control = pid
pid_kp = 61.636
pid_ki = 3.604
pid_kd = 263.494

#####################################################################
#   Probe
#####################################################################

[probe]
pin: SBCAN: PB6

x_offset: 0
y_offset: 23.0
z_offset: 13.381
speed: 10.0
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.01
samples_tolerance_retries: 5

#####################################################################
#   Fan Control
#####################################################################

[fan]
pin: SBCAN: PA1
kick_start_time: 0.5
off_below: 0.10

[heater_fan hotend_fan]
pin: SBCAN: PA0
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
fan_speed: 1.0

[controller_fan controller_fan1]
pin: PA8
fan_speed: 0.6
idle_timeout: 30
idle_speed: 0.2
kick_start_time: 0.5
heater: heater_bed, extruder
stepper: extruder, stepper_x, stepper_y, stepper_z, stepper_z1, stepper_z2

[controller_fan controller_fan2]
pin: PE5
fan_speed: 0.6
idle_timeout: 30
idle_speed: 0.2
kick_start_time: 0.5
heater: heater_bed, extruder
stepper: extruder, stepper_x, stepper_y, stepper_z, stepper_z1, stepper_z2

[fan_generic exhaust_fan]
##  Exhaust fan - FAN3
pin: PD12
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 5.0

#####################################################################
#   LED Control
#####################################################################

#[output_pin caselight]
# Chamber Lighting - HE2 Connector (Optional)
#pin: PB10
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[safe_z_home]
home_xy_position: 147, 250
speed: 100
z_hop: 20

[z_tilt]
##  Use Z_TILT_ADJUST to level the bed
z_positions:
    -50, 18
    125, 298
    300, 18
points:
    30, 5
    125, 195
    220, 5

speed: 200
horizontal_move_z: 20
retries: 5
retry_tolerance: 0.0075

[bed_mesh]
speed: 200
horizontal_move_z: 20
mesh_min: 40, 40
mesh_max: 210, 210
probe_count: 5, 5
fade_start: 0.6
fade_end: 10
algorithm: bicubic
# read from calculated mesh positions (see last start in klippy.log)
# TODO: move this to constant section, will be used by macros too
zero_reference_position: 125.0, 210.0

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
# EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

# EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   Display
#####################################################################

[display]
##  mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

[neopixel btt_mini12864]
##  To control Neopixel RGB in mini12864 display
pin: EXP1_6
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

##  Set RGB values on boot up for each Neopixel.
##  Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
    SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
    SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
    SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3

#--------------------------------------------------------------------

#####################################################################
#   CUSTOM TEMPERATURE SENSORS
#####################################################################
[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[temperature_sensor stealthburner]
sensor_type: Generic 3950
sensor_pin: SBCAN: PA2

[thermistor NTC_10K_3950]
# laskakit.cz, watterproof NTC Termistor 10K 1% 3950
# type: NTC 10k±1% 3950
# beta: 3950K -/+ 1%
temperature1: 25
resistance1: 10000
beta: 3950

[temperature_sensor chamber]
sensor_type: NTC_10K_3950
sensor_pin: PF7

#####################################################################
#   FILAMENT SENSORS
#####################################################################
[filament_switch_sensor runout]
switch_pin: PG12
pause_on_runout: false
runout_gcode:
    {action_respond_info("RUNOUT: Filament runout")}

#####################################################################
#   Macros
#####################################################################

[gcode_macro GET_LOCATION]
gcode:
    M114

[gcode_macro HOME_AND_TILT]
description: XYZ homing and Z tilt adjustment Z homeing after that. During print start after first pre-home and timeout for manual nozzle cleaning.
gcode:
    BED_MESH_CLEAR
    M117 Homing...
    G28                     ; home before calibration (nozzle must be clean before)
    M117 Tilt correction...
    Z_TILT_ADJUST
# homed by klicky
# G28 Z                   ; home again after tilt adjustment

[gcode_macro CALIBRATE_Z]
description: Calibrate Z endstop (clean nozzle before), run PROBE_CALIBRATE after
gcode:
    {% set is_first_run = params.FIRST_RUN|default(0)|int %}
    {% if is_first_run == 0 %}
    HOME_AND_TILT
    {% endif %}

    G90 ; absolute position
    G1 X125 Y210 Z20 F5000
    Z_ENDSTOP_CALIBRATE
    G1 X125 Y210 Z20 F5000

[gcode_macro CALIBRATE_Z_INIT]
description: Similar to CALIBRATE_Z but not starting TILT, use this for first time init
gcode:
    CALIBRATE_Z FIRST_RUN=1

## TODO: generalize with CALIBRATE_Z and find way to save x/y locations and IS_CALIBRATED to some global variable like printer.my_variables
[gcode_macro CALIBRATE_PROBE]
description: Calibrate probe, CALIBRATE_Z macro needs to be invoked before and apply Z calibration setup to printer.cfg
gcode:
    {% set is_first_run = params.FIRST_RUN|default(0)|int %}
    {% if is_first_run == 0 %}
    HOME_AND_TILT
    {% endif %}
    G90 ; absolute position
    G1 X125 Y210 Z20 F5000
    PROBE_CALIBRATE
    G1 X125 Y210 Z20 F5000

[gcode_macro CALIBRATE_PROBE_INIT]
description: Similar to CALIBRATE_PROBE but not starting TILT, use this for first time init
gcode:
    CALIBRATE_PROBE FIRST_RUN=1

## use this init macro in print start
[gcode_macro CALIBRATE_BED]
gcode:
    HOME_AND_TILT
    M117 Mesh...
    BED_MESH_CALIBRATE

[gcode_macro LOAD_FILAMENT]
description: Heat-up hotend, wait for filament and extrude some string
gcode:
# init heating
    M104 S150
    MOVE_TO_SERVICE_POSITION

# wait for extrudable temperature (240c should be OK to extrude any kind of filament)
    M109 S240

    M300 ; beep

# TODO: wait for filament (check runout sensor) - this check is OK also when triggered by automated load
    M83 ; relative extruder
    G92 E0.0 ; reset extruder position

# extrusion length needs to be long enough to clean nozzle from last color/type
;G1 E200 F350
    G1 E50 F350
    G1 E50 F350
    G1 E50 F350
    G1 E50 F350

    G1 E-25.0 F3600                ; retract filament
    G4
    G92 E0.0
# use M82 here if rest of config expect absolute mode

# if this macro will be called from pause/filament-change/.. this and maybe other stuff needs to be revised
    M104 S0 ; turn of nozzle

[gcode_macro MOVE_TO_SERVICE_POSITION]
gcode:
    {% set th = printer.toolhead %}
    {% set x_mid = 2*(th.axis_maximum.x - th.axis_minimum.x)/3 %}
    {% set y_front = 0 %}
    {% set z_clean = 80 %}

    {% if printer.toolhead.homed_axes == "xyz" %}
    M117 Already homed
    {% else %}
    M117 Homing ...
    G28
    {% endif %}

    G90 ; absolute positioning
    G1 X{x_mid} Y{y_front} Z{z_clean} F10000
    G4

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - PLEASE CUSTOMISE THE SCRIPT
# **** ORCASLICER ****
# M104 S0
# M140 S0
# PRINT_START BED_TEMP=[first_layer_bed_temperature] EXTRUDER_TEMP=[first_layer_temperature] CHAMBER_TEMP=[chamber_temperature]
# M221 S{if layer_height<0.075}100{else}95{endif}
gcode:
# read params from slicer
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(220)|float %}
    {% set CHAMBER_TEMP = params.CHAMBER_TEMP|default(40)|float %}

# temperature init
    M140 S{BED_TEMP}
    M104 S150 ; Set non dripping hotend temperature

# home printer if not homed to allow movements and park to allow nozzle cleaning
#  (another homing will be performed during bed calibration)
    MOVE_TO_SERVICE_POSITION

# wait for non dripping hotend temperature
    M117 Clean nozzle!
    M109 S150

# wait for bed temperature
    M117 Heating bed...
    M190 S{BED_TEMP}

    G90 ; absolute positioning
    M83 ; relative extruder

    CALIBRATE_BED

# prepare for cleaning procedure and heat up extruder
    G1 X8 Y0 Z5 F5000

    M117 Heating extruder...
    M109 S{EXTRUDER_TEMP}

# clean nozzle
    G92 E0  ; reset retracted distance

; phase-1: extrude the more then retracted on last print_end
    G1 X100 Z0.3 F3000
    G1 X10 E15 F600
    G1 X10 Y0.5 F600
    G1 X160 E30 F600
; phase-2: cleaning
    G1 X180 F5000

    G92 E0
    G1 E-0.02 F1200  ; limit stringing
;   G92 E0

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
# ;BEFORE_LAYER_CHANGE
# G92 E0.0
# ;[layer_z]
gcode:
# safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 20, th.axis_maximum.z]|min %}

    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-25.0 F3600                ; retract filament
    G4

    TURN_OFF_HEATERS

    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan

    M84 ; turn off steppers
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    M117 Canceling print...
    PRINT_END
    CANCEL_PRINT_BASE
